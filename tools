zipi_text<-function (igraph = igraph, method = "cluster_fast_greedy") 
{
  if (method == "cluster_walktrap") {
    fc <- igraph::cluster_walktrap(igraph, weights = abs(igraph::E(igraph)$weight))
  }
  if (method == "cluster_edge_betweenness") {
    fc <- igraph::cluster_edge_betweenness(igraph, weights = abs(igraph::E(igraph)$weight))
  }
  if (method == "cluster_fast_greedy") {
    fc <- igraph::cluster_fast_greedy(igraph, weights = abs(igraph::E(igraph)$weight))
  }
  if (method == "cluster_spinglass") {
    fc <- igraph::cluster_spinglass(igraph, weights = abs(igraph::E(igraph)$weight))
  }
  modularity <- igraph::modularity(igraph, igraph::membership(fc))
  comps <- igraph::membership(fc)
  igraph::V(igraph)$module <- as.character(comps)
  taxa.roles <- module.roles(igraph)
  taxa.roles$label = row.names(taxa.roles)
  for (i in 1:nrow(taxa.roles)) if (taxa.roles[i, 3] > 0.62 | 
                                    taxa.roles[i, 1] > 2.5) {
    taxa.roles[i, 5] = taxa.roles[i, 5]
  }
  else {
    taxa.roles[i, 5] = ""
    
    taxa.roles$role_7 = taxa.roles$roles
    taxa.roles <- na.omit(taxa.roles)
    taxa.roles[which(taxa.roles$z < 2.5 & taxa.roles$p < 0.62), 
               "roles"] <- "Peripherals"
    taxa.roles[which(taxa.roles$z < 2.5 & taxa.roles$p >= 0.62), 
               "roles"] <- "Connectors"
    taxa.roles[which(taxa.roles$z >= 2.5 & taxa.roles$p < 0.62), 
               "roles"] <- "Module hubs"
    taxa.roles[which(taxa.roles$z >= 2.5 & taxa.roles$p >= 0.62), 
               "roles"] <- "Network hubs"}
  return(taxa.roles)
}

zipi_plot<- function (node.roles, roles.colors = NULL) 
{
  x1 <- c(0, 0.62, 0, 0.62)
  x2 <- c(0.62, 1, 0.62, 1)
  y1 <- c(-Inf, 2.5, 2.5, -Inf)
  y2 <- c(2.5, Inf, Inf, 2.5)
  lab <- c("peripheral", "Network hubs", "Module hubs", "Connectors")
  if (is.null(roles.colors)) {
    roles.colors <- c("#E6E6FA", "#DCDCDC", "#F5FFFA", "#FAEBD7")
  }
  p <- ggplot() + geom_rect(data = NULL, mapping = aes(xmin = x1, 
                                                       xmax = x2, ymin = y1, ymax = y2, fill = lab))
  p
  p <- p + guides(fill = guide_legend(title = "Topological roles"))
  p <- p + scale_fill_manual(values = roles.colors)
  p <- p + geom_point(data = node.roles, aes(x = p, y = z, 
                                               color = Phylum)) + theme_bw() + guides()
  p <- p + theme(strip.background = element_rect(fill = "white")) + 
    xlab("Participation Coefficient") + ylab(" Within-module connectivity z-score")
  return(p)
}
